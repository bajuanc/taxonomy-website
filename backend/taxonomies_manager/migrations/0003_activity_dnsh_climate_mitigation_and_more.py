# Generated by Django 5.2.4 on 2025-10-21 16:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('taxonomies_manager', '0002_taxonomy_country_code'),
    ]

    operations = [
        migrations.AddField(
            model_name='activity',
            name='dnsh_climate_mitigation',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='activity',
            name='economic_code_system',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='taxonomy',
            name='dnsh_general',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='taxonomy',
            name='language',
            field=models.CharField(blank=True, default='EN', max_length=5),
        ),
        migrations.AddField(
            model_name='taxonomy',
            name='mss',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='activity',
            name='environmental_objective',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='taxonomies_manager.environmentalobjective'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='sc_criteria_type',
            field=models.CharField(choices=[('threshold', 'threshold'), ('traffic_light', 'traffic_light')], default='threshold', max_length=50),
        ),
        migrations.AlterField(
            model_name='activity',
            name='sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='taxonomies_manager.sector'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='taxonomy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='taxonomies_manager.taxonomy'),
        ),
        migrations.AlterField(
            model_name='environmentalobjective',
            name='taxonomy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objectives', to='taxonomies_manager.taxonomy'),
        ),
        migrations.AlterField(
            model_name='sector',
            name='environmental_objective',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sectors', to='taxonomies_manager.environmentalobjective'),
        ),
        migrations.AlterField(
            model_name='sector',
            name='taxonomy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sectors', to='taxonomies_manager.taxonomy'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='name',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AlterUniqueTogether(
            name='environmentalobjective',
            unique_together={('taxonomy', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='sector',
            unique_together={('taxonomy', 'environmental_objective', 'name')},
        ),
        migrations.CreateModel(
            name='Subsector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subsectors', to='taxonomies_manager.sector')),
            ],
            options={
                'unique_together': {('sector', 'name')},
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='subsector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='taxonomies_manager.subsector'),
        ),
        migrations.AlterUniqueTogether(
            name='activity',
            unique_together={('taxonomy', 'environmental_objective', 'sector', 'subsector', 'name')},
        ),
        migrations.CreateModel(
            name='RwandaAdaptation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, default='EN', max_length=5)),
                ('environmental_objective', models.CharField(max_length=100)),
                ('sector', models.CharField(max_length=255)),
                ('hazard', models.CharField(max_length=255)),
                ('division', models.CharField(max_length=255)),
                ('investment', models.TextField()),
                ('expected_effect', models.TextField(blank=True)),
                ('expected_result', models.TextField(blank=True)),
                ('type', models.CharField(choices=[('Adapted', 'Adapted'), ('Adapting', 'Adapting'), ('Enabling', 'Enabling')], max_length=50)),
                ('level', models.CharField(choices=[('Activity', 'Activity'), ('Measure', 'Measure')], max_length=50)),
                ('criteria_type', models.CharField(choices=[('Process-based', 'Process-based'), ('Quantitative', 'Quantitative'), ('Qualitative', 'Qualitative'), ('Whitelist', 'Whitelist')], max_length=50)),
                ('generic_dnsh', models.TextField(blank=True)),
                ('source_ref', models.CharField(blank=True, max_length=255)),
                ('taxonomy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rwanda_adaptation_rows', to='taxonomies_manager.taxonomy')),
            ],
            options={
                'verbose_name': 'Rwanda Adaptation',
                'verbose_name_plural': 'Rwanda Adaptation',
                'unique_together': {('taxonomy', 'environmental_objective', 'sector', 'hazard', 'division', 'investment', 'type', 'level', 'criteria_type', 'expected_effect', 'expected_result')},
            },
        ),
        migrations.CreateModel(
            name='Practice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('practice_level', models.CharField(choices=[('basic', 'basic'), ('intermediate', 'intermediate'), ('advanced', 'advanced'), ('Additional eligible green practices', 'Additional eligible green practices'), ('amber', 'amber'), ('red', 'red')], max_length=80)),
                ('practice_name', models.CharField(blank=True, max_length=255)),
                ('practice_description', models.TextField(blank=True)),
                ('eligible_practices', models.TextField(blank=True)),
                ('non_eligible_practices', models.TextField(blank=True)),
                ('green_practices', models.TextField(blank=True)),
                ('amber_practices', models.TextField(blank=True)),
                ('red_practices', models.TextField(blank=True)),
                ('environmental_objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practices', to='taxonomies_manager.environmentalobjective')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practices', to='taxonomies_manager.sector')),
                ('taxonomy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practices', to='taxonomies_manager.taxonomy')),
                ('subsector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='practices', to='taxonomies_manager.subsector')),
            ],
            options={
                'unique_together': {('taxonomy', 'environmental_objective', 'sector', 'subsector', 'practice_level', 'practice_name')},
            },
        ),
    ]
